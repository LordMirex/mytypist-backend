version: '3.8'

services:
  postgres:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-mytypist}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mytypist123}
      POSTGRES_DB: ${POSTGRES_DB:-mytypistdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mytypist}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6000:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-1234}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-true}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-mytypist}:${POSTGRES_PASSWORD:-mytypist123}@postgres:5432/${POSTGRES_DB:-mytypistdb}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-1234}@redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-secret-key-32-characters-minimum}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-32-characters-minimum}
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: